import tkinter as tk
from tkinter import messagebox
import matplotlib.pyplot as plt

class BMICalculator:
    def __init__(self, root):
        self.root = root
        self.root.title("BMI Calculator")
        self.root.geometry("300x200")

        # Create input fields
        self.weight_label = tk.Label(root, text="Weight (kg):")
        self.weight_label.pack()
        self.weight_entry = tk.Entry(root)
        self.weight_entry.pack()

        self.height_label = tk.Label(root, text="Height (m):")
        self.height_label.pack()
        self.height_entry = tk.Entry(root)
        self.height_entry.pack()

        # Create calculate button
        self.calculate_button = tk.Button(root, text="Calculate BMI", command=self.calculate_bmi)
        self.calculate_button.pack()

        # Create result label
        self.result_label = tk.Label(root, text="")
        self.result_label.pack()

        # Create graph button
        self.graph_button = tk.Button(root, text="View BMI Trend", command=self.view_bmi_trend)
        self.graph_button.pack()

        # Initialize data storage
        self.data = {}

    def calculate_bmi(self):
        """Calculate BMI and classify it into categories"""
        weight = float(self.weight_entry.get())
        height = float(self.height_entry.get())
        bmi = weight / (height ** 2)
        category = self.classify_bmi(bmi)
        self.result_label.config(text=f"Your BMI is: {bmi:.2f}\nYour BMI category is: {category}")
        self.store_data(weight, height, bmi)

    def classify_bmi(self, bmi):
        """Classify BMI into categories"""
        if bmi < 18.5:
            return "Underweight"
        elif bmi < 25:
            return "Normal"
        elif bmi < 30:
            return "Overweight"
        else:
            return "Obese"

    def store_data(self, weight, height, bmi):
        """Store data for multiple users"""
        user_id = self.get_user_id()
        self.data[user_id] = {"weight": weight, "height": height, "bmi": bmi}

    def get_user_id(self):
        """Get user ID (for simplicity, just use a counter)"""
        if not hasattr(self, "user_id"):
            self.user_id = 0
        self.user_id += 1
        return self.user_id

    def view_bmi_trend(self):
        """View BMI trend using matplotlib"""
        user_id = self.get_user_id()
        data = self.data[user_id]
        bmi_values = [data["bmi"]]
        plt.plot(bmi_values)
        plt.xlabel("Time")
        plt.ylabel("BMI")
        plt.title("BMI Trend")
        plt.show()

if __name__ == "__main__":
    root = tk.Tk()
    app = BMICalculator(root)
    root.mainloop()
